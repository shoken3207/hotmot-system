create database lunch;
USE DATABASE lunch;
-- User table
CREATE TABLE Users (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(191) UNIQUE NOT NULL,
  password VARCHAR(191) NOT NULL,
  name VARCHAR(191),
  isAdmin BOOLEAN NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- BookMark tablelunch
CREATE TABLE BookMarks (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  userId INTEGER NOT NULL,
  productId INTEGER NOT NULL,
  categoryId INTEGER,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES Users(id)
);
-- Cart table
CREATE TABLE Carts (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  userId INTEGER UNIQUE NOT NULL,
  shopId INTEGER NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES Users(id)
);
-- CartDetail table
CREATE TABLE CartDetails (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  cartId INTEGER NOT NULL,
  productId INTEGER NOT NULL,
  riceId INTEGER NOT NULL,
  quantity INTEGER NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (cartId) REFERENCES Carts(id)
);

-- Order table
CREATE TABLE Orders (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  userId INTEGER NOT NULL,
  shopId INTEGER NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (userId) REFERENCES Users(id)
);

-- OrderDetail table
CREATE TABLE OrderDetails (
  id INTEGER AUTO_INCREMENT PRIMARY KEY,
  orderId INTEGER NOT NULL,
  productId INTEGER NOT NULL,
  riceId INTEGER NOT NULL,
  quantity INTEGER NOT NULL,
  status INTEGER NOT NULL,
  createdAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (orderId) REFERENCES Orders(id)
);